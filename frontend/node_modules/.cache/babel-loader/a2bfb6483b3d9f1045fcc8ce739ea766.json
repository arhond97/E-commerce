{"ast":null,"code":"import axios from \"axios\";\nimport { USER_ADDRESS_FAIL, USER_ADDRESS_REQUEST, USER_ADDRESS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS } from \"../constants/productsConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, surname, email, password, address, city, state, zip, acceptedRules) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      surname,\n      email,\n      password,\n      address,\n      city,\n      state,\n      zip,\n      acceptedRules\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      surname,\n      email,\n      password,\n      address,\n      city,\n      state,\n      zip,\n      acceptedRules\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getAddress = userId => async dispatch => {\n  try {\n    dispatch({\n      type: USER_ADDRESS_REQUEST,\n      payload: userId\n    });\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`);\n    dispatch({\n      type: USER_ADDRESS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ADDRESS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/account`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Arhond/IdeaProjects/E-commerce/frontend/src/actions/userActions.js"],"names":["axios","USER_ADDRESS_FAIL","USER_ADDRESS_REQUEST","USER_ADDRESS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","surname","address","city","state","zip","acceptedRules","getAddress","userId","get","detailsUser","getState","userSignin","userInfo","headers","Authorization","token","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    USER_ADDRESS_FAIL,\r\n    USER_ADDRESS_REQUEST, USER_ADDRESS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport {PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS} from \"../constants/productsConstants\";\r\n\r\nexport const signin = (email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const register = (name, surname, email, password, address, city, state, zip, acceptedRules) => async (dispatch) =>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, surname, email, password, address, city, state, zip, acceptedRules}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name, surname, email, password, address, city, state, zip, acceptedRules});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const getAddress = (userId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: USER_ADDRESS_REQUEST, payload: userId});\r\n        const {data} = await axios.get(`/api/users/${userId}`);\r\n        dispatch({ type: USER_ADDRESS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: USER_ADDRESS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n\r\n}\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try{\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    const {userSignin: { userInfo}} = getState();\r\n    try {\r\n        const {data} = await axios.put(`/api/users/account`, user, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}