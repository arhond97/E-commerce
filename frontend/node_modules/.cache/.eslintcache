[{"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\index.js":"1","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\store.js":"2","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\App.js":"3","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\productReducers.js":"4","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\HomeScreen.js":"8","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\AccountScreen.js":"9","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ShippingScreen.js":"10","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ProductsScreen.js":"11","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ProductScreen.js":"12","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\SummaryScreen.js":"13","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\OrderScreen.js":"14","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\MyOrdersScreen.js":"15","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\AdminPanelScreen.js":"16","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\PrivacyScreen.js":"17","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\AdminRoute.js":"18","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Navbar.js":"19","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\LoginModal.js":"20","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\CartScreen.js":"21","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Footer.js":"22","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\ProductEditModal.js":"23","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Carousel.js":"24","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Loading.js":"25","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserData.js":"26","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserChangePassword.js":"27","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Error.js":"28","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserChangeDetailsModal.js":"29","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Products.js":"30","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Orders.js":"31","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\RegisterScreen.js":"32","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\LoginScreen.js":"33","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\cartConstants.js":"34","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\orderConstants.js":"35","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\productsConstants.js":"36","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\userConstants.js":"37","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\userActions.js":"38","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\orderActions.js":"39","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\productActions.js":"40","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Tabs.js":"42","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\ProductCreateModal.js":"43"},{"size":376,"mtime":1641302496561,"results":"44","hashOfConfig":"45"},{"size":2363,"mtime":1641302496567,"results":"46","hashOfConfig":"45"},{"size":2718,"mtime":1641302496554,"results":"47","hashOfConfig":"45"},{"size":3439,"mtime":1641302496566,"results":"48","hashOfConfig":"45"},{"size":1006,"mtime":1641302496566,"results":"49","hashOfConfig":"45"},{"size":3818,"mtime":1641302496566,"results":"50","hashOfConfig":"45"},{"size":2859,"mtime":1641302496566,"results":"51","hashOfConfig":"45"},{"size":239,"mtime":1641302496563,"results":"52","hashOfConfig":"45"},{"size":2333,"mtime":1641302496562,"results":"53","hashOfConfig":"45"},{"size":13784,"mtime":1642970834888,"results":"54","hashOfConfig":"45"},{"size":9429,"mtime":1642430979615,"results":"55","hashOfConfig":"45"},{"size":8998,"mtime":1642430979574,"results":"56","hashOfConfig":"45"},{"size":8305,"mtime":1642430979604,"results":"57","hashOfConfig":"45"},{"size":11830,"mtime":1642869415893,"results":"58","hashOfConfig":"45"},{"size":2706,"mtime":1642430979554,"results":"59","hashOfConfig":"45"},{"size":140,"mtime":1641302496562,"results":"60","hashOfConfig":"45"},{"size":28486,"mtime":1641302496564,"results":"61","hashOfConfig":"45"},{"size":487,"mtime":1641302496556,"results":"62","hashOfConfig":"45"},{"size":7783,"mtime":1642430979543,"results":"63","hashOfConfig":"45"},{"size":7575,"mtime":1642430979525,"results":"64","hashOfConfig":"45"},{"size":5057,"mtime":1642430979513,"results":"65","hashOfConfig":"45"},{"size":1207,"mtime":1641320557887,"results":"66","hashOfConfig":"45"},{"size":11402,"mtime":1641302496558,"results":"67","hashOfConfig":"45"},{"size":1562,"mtime":1642871468556,"results":"68","hashOfConfig":"45"},{"size":146,"mtime":1641302496557,"results":"69","hashOfConfig":"45"},{"size":1344,"mtime":1641302496559,"results":"70","hashOfConfig":"45"},{"size":3452,"mtime":1641302496559,"results":"71","hashOfConfig":"45"},{"size":182,"mtime":1641302496556,"results":"72","hashOfConfig":"45"},{"size":8051,"mtime":1641302496559,"results":"73","hashOfConfig":"45"},{"size":6680,"mtime":1642430979585,"results":"74","hashOfConfig":"45"},{"size":5270,"mtime":1642430979482,"results":"75","hashOfConfig":"45"},{"size":8985,"mtime":1641302496565,"results":"76","hashOfConfig":"45"},{"size":3485,"mtime":1641302496563,"results":"77","hashOfConfig":"45"},{"size":193,"mtime":1641302496560,"results":"78","hashOfConfig":"45"},{"size":1437,"mtime":1641302496560,"results":"79","hashOfConfig":"45"},{"size":1361,"mtime":1641302496560,"results":"80","hashOfConfig":"45"},{"size":1110,"mtime":1641302496561,"results":"81","hashOfConfig":"45"},{"size":3986,"mtime":1641302496555,"results":"82","hashOfConfig":"45"},{"size":5304,"mtime":1641302496555,"results":"83","hashOfConfig":"45"},{"size":4136,"mtime":1641302496555,"results":"84","hashOfConfig":"45"},{"size":1045,"mtime":1641302496554,"results":"85","hashOfConfig":"45"},{"size":801,"mtime":1641302496559,"results":"86","hashOfConfig":"45"},{"size":10222,"mtime":1641302496558,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"4l3j6p",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\index.js",[],["191","192"],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\store.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\App.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\reducers\\userReducers.js",["193","194","195"],"import {\r\n    USER_ADDRESS_FAIL,\r\n    USER_ADDRESS_REQUEST,\r\n    USER_ADDRESS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport {PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS} from \"../constants/productsConstants\";\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return {loading: true};\r\n        case USER_SIGNIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload};\r\n        case USER_SIGNIN_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_SIGNOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true};\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload};\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userAddressReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_ADDRESS_REQUEST:\r\n            return { loading: true };\r\n        case USER_ADDRESS_SUCCESS:\r\n            return { loading: false, userAddress: action.payload };\r\n        case USER_ADDRESS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = {loading: true}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {loading: true};\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload};\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true};\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\HomeScreen.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\AccountScreen.js",["196"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {detailsUser} from \"../actions/userActions\";\r\nimport {USER_UPDATE_PROFILE_RESET} from \"../constants/userConstants\";\r\nimport LoadingBox from \"../components/Loading\";\r\nimport ErrorBox from \"../components/Error\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport UserData from \"../components/UserData\";\r\nimport UserChangeDetails from \"../components/UserChangeDetailsModal\";\r\nimport UserChangePassword from \"../components/UserChangePassword\";\r\n\r\n\r\nexport default function Account(props) {\r\n\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading: userLoading, error: userError, user} = userDetails;\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const {success: updateSuccess, error: updateError, loading: updateLoading} = userUpdateProfile;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n            dispatch(detailsUser(userInfo._id));\r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n\r\n\r\n    return (\r\n        <div style={{marginBottom: \"11%\"}}>\r\n            {\r\n                userLoading ? <LoadingBox/> : userError ? <ErrorBox variant=\"danger\">{userError}</ErrorBox> : (\r\n                    <Container style={{marginTop: '20px'}}>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                {updateLoading && <LoadingBox/>}\r\n                                {updateError && <ErrorBox variant=\"danger\">{updateError}</ErrorBox>}\r\n                                <UserChangeDetails/>\r\n                            </Col>\r\n                            <Col>\r\n                                {updateLoading && <LoadingBox/>}\r\n                                {updateError && <ErrorBox variant=\"danger\">{updateError}</ErrorBox>}\r\n                                <UserChangePassword/>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr/>\r\n                        <UserData/>\r\n                    </Container>\r\n                )\r\n            }\r\n        </div>);\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ShippingScreen.js",["197","198"],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ProductsScreen.js",["199","200"],"import React, {useState} from 'react';\r\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button, Card, Col, Form} from \"react-bootstrap\";\r\nimport \"../index.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport LoadingBox from \"../components/Loading\";\r\nimport ErrorBox from \"../components/Error\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {listProducts, listProductsCategories} from \"../actions/productActions\";\r\nimport {faDollarSign, faEdit, faShoppingCart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {addToCart} from \"../actions/cartActions\";\r\n\r\n\r\nexport default function Products(props) {\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const {loading, error, products} = productList;\r\n    const dispatch = useDispatch();\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory]= useState('');\r\n    const productCategoryList = useSelector((state) => state.productCategoryList);\r\n    const {categories} = productCategoryList;\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        dispatch(listProducts());\r\n\r\n        dispatch(listProductsCategories());\r\n\r\n        window.scrollTo(0, 0);\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    const editHandler = (product) => {\r\n        window.location.href = `/product/${product._id}/edit`;\r\n    }\r\n\r\n    return (\r\n            <div className=\"my-container mt-5\" id=\"products\">\r\n                <Form>\r\n\r\n                    <Form.Row>\r\n                        <Col lg=\"4\"><h1 className=\"ml-3 mt-5 text-lg\">Produkty</h1></Col>\r\n                        <Form.Group as={Col} lg=\"4\" controlId=\"formGridSearch\">\r\n                            <Form.Label className=\"mt-3\">Wyszukaj</Form.Label>\r\n                            <Form.Control className=\"text-lg\" onChange={e => setName(e.target.value)}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg=\"4\" defaultValue=\"Wybierz kategorię...\" controlId=\"formGridCategory\">\r\n                            <Form.Control as=\"select\" className=\"mt-5 text-lg\"  onChange={e => setCategory(e.target.value)}>\r\n                                <option selected value=\"all\">Wybierz kategorię...</option>\r\n                                {categories.map((c) => (\r\n                                    <option key={c}>{c}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n\r\n\r\n                </Form>\r\n                {loading ? <LoadingBox/> :error ? <ErrorBox variant=\"danger\">{error}</ErrorBox> : (\r\n\r\n                    <div className=\"row pb-5\" style={{marginBottom: \"20%\"}}>\r\n                        {\r\n                            products.sort().filter((product) => {\r\n                            if(name === \"\" && category === \"all\"){\r\n                                return product;\r\n                            } else if(product.name.toLowerCase().includes(name.toLowerCase()) && category === \"all\"){\r\n                                return product;\r\n                            }else if(product.thumbnail.toLowerCase().includes(name.toLowerCase()) && category === \"all\"){\r\n                                return product;\r\n                            } else if(name === \"\" && product.category.toString().toLowerCase().includes(category.toLowerCase())) {\r\n                                return product;\r\n                            } else if(product.name.toLowerCase().includes(name.toLowerCase()) && product.category.toString().toLowerCase().includes(category.toLowerCase())){\r\n                                return product;\r\n                            } else if(product.thumbnail.toLowerCase().includes(name.toLowerCase()) && product.category.toString().toLowerCase().includes(category.toLowerCase())){\r\n                                return product;\r\n                            }\r\n\r\n                            }).map( (product) => (\r\n                                    <div className=\"col-lg-3 mt-3\" key={product._id}>\r\n                                        <Card className=\"m-lg-3\">\r\n                                            <Link to={`/product/${product._id}`}>\r\n                                                <Card.Img variant=\"top\" src={product.image} className=\"img-fluid w-100\"/>\r\n                                            </Link>\r\n                                            <Card.Body>\r\n                                                <Link to={`/product/${product._id}`} className=\"link-color\">\r\n                                                    <Card.Title>{product.name}</Card.Title>\r\n                                                </Link>\r\n                                                <Card.Text>{product.thumbnail}</Card.Text>\r\n                                                <h3 style={{textAlign: 'right'}}>{product.price} zł</h3>\r\n                                                {\r\n                                                    userInfo && !userInfo.isAdmin ? (\r\n\r\n                                                        product.countInStock > 0 ? (\r\n                                                                    <>\r\n                                                                    <Link to={`/cart/${product._id}?qty=1`} style={{textDecoration: 'none'}}>\r\n                                                                        <Button variant=\"outline-success\"\r\n                                                                                className=\"mb-btn-m w-100 pl-1 mb-2\"><FontAwesomeIcon\r\n                                                                            icon={faDollarSign}/> Kup teraz</Button>\r\n                                                                    </Link>\r\n                                                                        <Button\r\n                                                                            onClick={() => dispatch(addToCart(product._id, 1))}\r\n                                                                            variant=\"outline-dark\"\r\n                                                                            className=\"mb-btn-m w-100\"><FontAwesomeIcon\r\n                                                                            icon={faShoppingCart}/> Do koszyka</Button>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                    <h3 className=\"text-danger m-3 pb-4\">Wyprzedano</h3>\r\n                                                            )\r\n                                                        ) :\r\n                                                        (userInfo && userInfo.isAdmin ? (\r\n                                                            <Button\r\n                                                                variant=\"outline-dark\"\r\n                                                                className=\"mb-btn-m w-100\"\r\n                                                                onClick={() => editHandler(product)}><FontAwesomeIcon\r\n                                                                icon={faEdit}/> Edytuj Produkt</Button>\r\n                                                        ) : (\r\n                                                                product.countInStock > 0 ? (\r\n                                                                    <>\r\n                                                                        <Link to={`/cart/${product._id}?qty=1`} className=\"btn btn-outline-success mb-btn-m w-100 buttons-mb pl-1 block\"><FontAwesomeIcon\r\n                                                                            icon={faDollarSign}/> Kup teraz</Link>\r\n                                                                        <Button\r\n                                                                            onClick={() => dispatch(addToCart(product._id, 1))}\r\n                                                                            variant=\"outline-dark\"\r\n                                                                            className=\"mb-btn-m w-100\"><FontAwesomeIcon\r\n                                                                            icon={faShoppingCart}/> Do koszyka</Button>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                    <h3 className=\"text-danger m-3 pb-4\">Wyprzedano</h3>\r\n                                                                )\r\n                                                        )\r\n                                                        )\r\n                                                }\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </div>\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\n","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\ProductScreen.js",["201","202","203","204","205"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Carousel, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LoadingBox from \"../components/Loading\";\r\nimport ErrorBox from \"../components/Error\";\r\nimport {detailsProduct, listProducts} from \"../actions/productActions\";\r\nimport {addToCart} from \"../actions/cartActions\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default function ProductPage(props) {\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const {loading, error, product} = productDetails;\r\n    const productId = props.match.params.id;\r\n    const dispatch = useDispatch();\r\n    const body = document.querySelector('#root');\r\n    const [qty, setQty] = useState(1);\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(detailsProduct(productId));\r\n\r\n        window.scrollTo(0, 0);\r\n\r\n\r\n    }, [dispatch, productId]);\r\n\r\n    const editHandler = (product) => {\r\n        window.location.href = `/product/${product._id}/edit`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"m-3\">\r\n            <Row className=\"p-4 mt-3\">\r\n                <Col lg=\"12\">\r\n                    <h1 className=\"title\">Szczegóły Produktu</h1>\r\n                </Col>\r\n            </Row>\r\n            {\r\n              loading ? <LoadingBox/>  : error ? <ErrorBox variant=\"danger\">{error}</ErrorBox> : (\r\n                  <>\r\n                      <Row>\r\n                          <Col lg=\"6\">\r\n                              <Carousel indicators={false}>\r\n                                  <Carousel.Item>\r\n                                      <img\r\n                                          className=\"d-block w-100\"\r\n                                          src={product.image}\r\n                                          alt=\"First slide\"\r\n                                      />\r\n                                  </Carousel.Item>\r\n\r\n                                  <Carousel.Item>\r\n                                      <img\r\n                                          className=\"d-block w-100\"\r\n                                          src={product.image1}\r\n                                          alt=\"Third slide\"\r\n                                      />\r\n\r\n                                  </Carousel.Item>\r\n                              </Carousel>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                              <div className=\"mt-4 mb-4\">\r\n                                  <h1 className=\"text-lg\">{product.name}</h1>\r\n                              </div>\r\n                              <div className=\"text-md\">\r\n                                  {product.thumbnail}\r\n                              </div>\r\n                              {\r\n                                  userInfo && !userInfo.isAdmin || !userInfo ? (\r\n                                      <Row className=\"ms-0 mt-3 ml-1 p-0\">\r\n                                          <Form>\r\n\r\n                                              <Form.Row>\r\n                                                  {product.countInStock > 0 && (\r\n                                                      <>\r\n                                                          <Form.Group as={Col} lg=\"6\" controlId=\"formGridQty\">\r\n                                                              <Form.Label className=\"mt-5 text-lg\">Ilość</Form.Label>\r\n                                                              <Form.Control as=\"select\" defaultValue=\"Ilość...\" className=\"text-lg w-75\" value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                                  {[...Array(product.countInStock).keys()].map(\r\n                                                                      (x) => (\r\n                                                                          <option key={x + 1} value={x + 1}>\r\n                                                                              {x + 1}\r\n                                                                          </option>\r\n                                                                      )\r\n                                                                  )}\r\n                                                              </Form.Control>\r\n                                                          </Form.Group>\r\n                                                          <Form.Group as={Col} lg=\"6\" controlId=\"formGridSize\">\r\n\r\n                                                          </Form.Group>\r\n                                                      </>\r\n                                                  )}\r\n\r\n                                                  <div className=\"col mt-4\">\r\n                                                      <h1 className=\"text-lg\">{product.price} zł</h1>\r\n                                                  </div>\r\n                                                  {\r\n                                                      product.countInStock > 0 ? (\r\n                                                          <>\r\n                                                              <Col lg=\"12\">\r\n                                                                  <Link to={`/cart/${product._id}?qty=${qty}`} style={{textDecoration: 'none'}}>\r\n                                                                      <Button variant=\"success\" size=\"lg\"\r\n                                                                              className=\"mt-5 mb-3 w-75\" block>\r\n                                                                          Kup teraz\r\n                                                                      </Button>\r\n                                                                  </Link>\r\n                                                              </Col>\r\n                                                              <Col lg=\"12\">\r\n                                                                  <Button variant=\"dark\" size=\"lg\"\r\n                                                                          className=\"mb-5  w-75\" onClick={() => dispatch(addToCart(product._id, qty))} block>\r\n                                                                      Do koszyka\r\n                                                                  </Button>\r\n                                                              </Col>\r\n                                                          </>) : (\r\n                                                          <Col lg=\"12\">\r\n                                                              <h3 className=\"text-danger mt-3 pb-4\">Wyprzedano</h3>\r\n                                                          </Col>\r\n                                                      )\r\n                                                  }\r\n                                              </Form.Row>\r\n\r\n                                          </Form>\r\n                                      </Row>\r\n                                  ) : (\r\n                                      <>\r\n                                          <div className=\"mt-4\">\r\n                                              <h1 className=\"text-lg\">{product.price} zł</h1>\r\n                                          </div>\r\n                                          <Button\r\n                                              variant=\"outline-dark\"\r\n                                              className=\"mb-btn-m mt-5 w-100 buttons-mb\"\r\n                                              onClick={() => editHandler(product)}><FontAwesomeIcon\r\n                                              icon={faEdit}/> Edytuj Produkt</Button>\r\n                                      </>\r\n                                  )\r\n\r\n                              }\r\n                          </Col>\r\n                      </Row>\r\n                      <div className=\"bg-light mt-5 p-3\">\r\n                          <Row className=\"text-center\">\r\n                              <Col>\r\n                                  <h2>\r\n                                      Opis Produktu\r\n                                  </h2>\r\n                              </Col>\r\n                          </Row>\r\n                          <Row className=\"p-4\">\r\n                              <Col>\r\n                                  <div className=\"col-lg text-dark text-start text-break lh-lg text-sm\">\r\n                                      {product.description}\r\n                                  </div>\r\n                              </Col>\r\n                          </Row>\r\n                      </div>\r\n                  </>\r\n              )}\r\n\r\n        </div>\r\n\r\n        </>\r\n\r\n    )\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\SummaryScreen.js",["206","207","208"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\nimport {useEffect} from \"react\";\r\nimport {ORDER_CREATE_RESET} from \"../constants/orderConstants\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Summary(props) {\r\n    const cart = useSelector(state => state.cart);\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const {loading, success, error, order} = orderCreate;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if(cart.cartItems.length === 0){\r\n            props.history.push('/cart');\r\n        }\r\n        if(success){\r\n            props.history.push(`/order/${order._id}`);\r\n            dispatch({type: ORDER_CREATE_RESET});\r\n        }\r\n\r\n        window.scrollTo(0, 0);\r\n\r\n    }, [dispatch, order, props.history, success])\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({...cart, orderItems: cart.cartItems}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mr-0\">\r\n                <Col lg=\"6\" className=\"ml-2\">\r\n\r\n                    <Container className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>1.Sposób dostawy</h2>\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <h4>{cart.shippingAddress.deliveryMethod}</h4>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <Container className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>2.Metoda Płatności</h2>\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <h4>{cart.shippingAddress.paymentMethod}</h4>\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <Container  className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-3\">\r\n                                    <h2>3.Dane Adresowe</h2>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>E-mail:</h5><p>{cart.shippingAddress.email}</p>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>Imię i Nazwisko: </h5><p>{cart.shippingAddress.name} {cart.shippingAddress.surname}</p>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>Adres: </h5><p>{cart.shippingAddress.address}, {cart.shippingAddress.state}, {cart.shippingAddress.city}, {cart.shippingAddress.zip}</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container  className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"8\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>4.Zawartość Koszyka:</h2>\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        cart.cartItems.map((item) => (\r\n                                            <Row className=\"mb-3\">\r\n                                                <Col lg=\"4\">\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        <Image className=\"img-fluid\" src={item.image}/>\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col lg=\"4\">\r\n                                                    <Link className=\"link-color-carousel\" to={`/product/${item.product}`}>\r\n                                                        <p className=\"mt-4\" style={{marginRight: \"200px\",whiteSpace: \"nowrap\", overflow: \"hidden\",textOverflow: \"ellipsis\",width: \"13ch\"}}>\r\n                                                            {item.name} x {item.qty}\r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col lg=\"4\">\r\n                                                    <p className=\"mt-4\" style={{marginRight: \"200px\",whiteSpace: \"nowrap\", overflow: \"hidden\",textOverflow: \"ellipsis\",width: \"13ch\"}}>{(item.qty * item.price).toFixed(2)} zł</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n\r\n                <Col lg=\"4\" className=\"mt-5\">\r\n                    <h2 className=\"text-center\">Podsumowanie</h2>\r\n                    <div className=\"bg-light p-3 mr-2\">\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Koszyk:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{cart.shippingAddress.cartPrice.toFixed(2)} zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Dostawa:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{cart.shippingAddress.deliveryMethod === 'Kurier' ? cart.shippingAddress.deliveryPrice.toFixed(2) : '0.00'} zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Razem:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{cart.shippingAddress.deliveryMethod === 'Kurier' ? (cart.shippingAddress.cartPrice + cart.shippingAddress.deliveryPrice).toFixed(2): cart.shippingAddress.cartPrice.toFixed(2) } zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button variant=\"success\" type=\"submit\" size=\"lg\" className=\"mt-5 text-lg mb-3\" block onClick={placeOrderHandler}>\r\n                                    Do Płatności\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Link to=\"/product\"  style={{textDecoration: 'none'}}>\r\n                                    <Button variant=\"outline-dark\" size=\"lg\" className=\"text-lg mb-5\" block>\r\n                                        Kontynuuj Zakupy\r\n                                    </Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </>\r\n\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\OrderScreen.js",["209","210","211","212","213"],"import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {deliverOrder, detailsOrder, payOrder} from \"../actions/orderActions\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {ORDER_DELIVER_RESET, ORDER_PAY_RESET} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport LoadingBox from \"../components/Loading\";\r\nimport {PayPalButton} from \"react-paypal-button-v2\";\r\nimport ErrorBox from \"../components/Error\";\r\nimport Moment from 'moment';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Order(props) {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n    const orderId = props.match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(true);\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const {order, loading, error} = orderDetails;\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, error: errorPay, success: successPay,} = orderPay;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const dispatch = useDispatch();\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, error: errorDeliver, success: successDeliver,} = orderDeliver;\r\n    Moment.locale('pl');\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id={ data }&currency=USD`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n        if (!order || successPay || successDeliver || (order && order._id !== orderId)) {\r\n            dispatch({type:ORDER_PAY_RESET});\r\n            dispatch({type:ORDER_DELIVER_RESET});\r\n            dispatch(detailsOrder(orderId));\r\n        } else {\r\n            if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                } else {\r\n                    setSdkReady(true);\r\n                }\r\n            }\r\n        }\r\n    }, [dispatch, orderId, sdkReady, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(order, paymentResult));\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        if(window.confirm(`Czy chcesz dostarczyć zamówienie numer ${order._id}?`)) {\r\n            dispatch(deliverOrder(order._id));\r\n        }\r\n    }\r\n\r\n    return loading ? (<LoadingBox/>) : error ? (<ErrorBox variant=\"danger\">{error}</ErrorBox>) : (\r\n        <>\r\n            <Row className=\"mr-0\">\r\n                <Col lg=\"6\" className=\"ml-2\">\r\n                    <Col sm=\"6\">\r\n                        <h1 className=\"mt-3 black-text-lg\">Zamówienie nr</h1>\r\n                        <h1 className=\"black-text-lg\">{order._id}</h1>\r\n                    </Col>\r\n                    <Container className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>1.Sposób dostawy</h2>\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <h4>{order.shippingAddress.deliveryMethod}</h4>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"mt-3 mx-3\">\r\n                            {order.isDelivered ? <ErrorBox variant=\"success\">Dostarczono: {Moment(order.deliveredAt).format('YYYY/MM/DD HH:MM')}</ErrorBox>: (order.shippingAddress.deliveryMethod === 'Kurier' && <ErrorBox variant=\"danger\">Zamówienie Niedostarczone</ErrorBox>)}\r\n                        </div>\r\n                    </Container>\r\n\r\n\r\n                    <Container className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>2.Metoda Płatności</h2>\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <h4>{order.shippingAddress.paymentMethod}</h4>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"mt-3 mx-3\">\r\n                            {order.isPaid ? <ErrorBox variant=\"success\">Zapłacono: {Moment(order.paidAt).format('YYYY/MM/DD HH:MM')}</ErrorBox>: (order.shippingAddress.paymentMethod === 'PayPal' && <ErrorBox variant=\"danger\">Zamówienie Nieopłacone</ErrorBox>)}\r\n                        </div>\r\n                    </Container>\r\n\r\n                    <Container  className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <div className=\"mb-3\">\r\n                                    <h2>3.Dane Adresowe</h2>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>E-mail:</h5><p>{order.shippingAddress.email}</p>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>Imię i Nazwisko: </h5><p>{order.shippingAddress.name} {order.shippingAddress.surname}</p>\r\n                                </div>\r\n                                <div className=\"my-1 ml-3\">\r\n                                    <h5>Adres: </h5><p>{order.shippingAddress.address}, {order.shippingAddress.state}, {order.shippingAddress.city}, {order.shippingAddress.zip}</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container  className=\"mt-5 mb-5 p-3 border border-dark\">\r\n                        <Row>\r\n                            <Col lg=\"8\">\r\n                                <div className=\"mb-5\">\r\n                                    <h2>4.Zawartość Koszyka:</h2>\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        order.orderItems.map((item) => (\r\n                                            <Row className=\"mb-3\">\r\n                                                <Col lg=\"4\">\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        <Image className=\"img-fluid\" src={item.image}/>\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col lg=\"4\">\r\n                                                    <Link className=\"link-color-carousel\" to={`/product/${item.product}`}>\r\n                                                        <p className=\"mt-4\" style={{marginRight: \"200px\",whiteSpace: \"nowrap\", overflow: \"hidden\",textOverflow: \"ellipsis\",width: \"13ch\"}}>\r\n                                                            {item.name} x {item.qty}\r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col lg=\"4\">\r\n                                                    <p className=\"mt-4\" style={{marginRight: \"200px\",whiteSpace: \"nowrap\", overflow: \"hidden\",textOverflow: \"ellipsis\",width: \"13ch\"}}>{(item.qty * item.price).toFixed(2)} zł</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n\r\n                <Col lg=\"4\" className=\"mt-5 ml-3\">\r\n                    <h2 className=\"text-center\">Podsumowanie</h2>\r\n                    <div className=\"bg-light p-3 mr-2\">\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Koszyk:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{order.shippingAddress.cartPrice.toFixed(2)} zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Dostawa:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{order.shippingAddress.deliveryMethod === 'Kurier' ? order.shippingAddress.deliveryPrice.toFixed(2) : '0.00'} zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-4\">\r\n                            <Col lg=\"5\">\r\n                                <h4 className=\"text-center\">Razem:</h4>\r\n                            </Col>\r\n                            <Col lg=\"7\">\r\n                                <h3 className=\"text-center\">{order.shippingAddress.deliveryMethod === 'Kurier' ? (order.shippingAddress.cartPrice + order.shippingAddress.deliveryPrice).toFixed(2): order.shippingAddress.cartPrice.toFixed(2) } zł</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        {!order.isPaid && order.shippingAddress.paymentMethod === 'PayPal' && (\r\n                            <div>\r\n                                {!sdkReady ? (\r\n                                    <LoadingBox/>\r\n                                ) : (\r\n                                    <div>\r\n                                        {errorPay && (\r\n                                            <ErrorBox variant=\"danger\">{errorPay}</ErrorBox>\r\n                                        )}\r\n                                        {\r\n                                            <PayPalButton amount={order.shippingAddress.totalPrice} onSuccess={successPaymentHandler} currency='USD'/>\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                        {userInfo.isAdmin && order.isPaid && !order.isDelivered && order.shippingAddress.deliveryMethod === \"Kurier\" &&(\r\n                            <Button variant=\"outline-dark\" size=\"md\" className=\"mt-5 px-3 text-lg mb-3\" block onClick={deliverHandler}>Dostarcz Zamówienie</Button>\r\n                        )}\r\n                        {userInfo.isAdmin && !order.isPaid && !order.isDelivered && order.shippingAddress.paymentMethod === \"Gotówka przy odbiorze\" &&(\r\n                            <Button variant=\"outline-dark\" size=\"md\" className=\"mt-5 px-3 text-lg mb-3\" block onClick={deliverHandler}>Dostarcz Zamówienie</Button>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </>\r\n\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\MyOrdersScreen.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\AdminPanelScreen.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\PrivacyScreen.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\AdminRoute.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Navbar.js",["214","215","216"],"import {Button, Card, Col, Nav, Navbar, NavDropdown, Row} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faShoppingCart, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Login from \"../pages/LoginScreen\";\r\nimport {useMediaQuery} from \"react-responsive/src\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {removeFromCart} from \"../actions/cartActions\";\r\nimport {signout} from \"../actions/userActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function MyNavbar() {\r\n\r\n    const isSmallMedia =  useMediaQuery({ query: '(max-width: 1028px)' });\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = useState(false);\r\n    const [showUser, setShowUser] = useState(false);\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    useEffect(() => {\r\n\r\n    }, [cartItems])\r\n\r\n    const signoutHandler = () => {\r\n        dispatch(signout());\r\n        window.location = '/'\r\n    }\r\n\r\n    const showDropdown = (e)=>{\r\n        setShow(!show);\r\n    }\r\n    const hideDropdown = e => {\r\n        setShow(false);\r\n    }\r\n\r\n    const showDropdownUser = (e)=>{\r\n        setShowUser(!showUser);\r\n    }\r\n    const hideDropdownUser = e => {\r\n        setShowUser(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar  expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">E-Commerce</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n\r\n                </Nav>\r\n                <Nav className=\"mr-lg-5\">\r\n                    {\r\n                        (userInfo && !userInfo.isAdmin || !userInfo ? (\r\n                        isSmallMedia ? <Nav.Link href=\"/cart\"><div style={{display: \"inline-block\"}}><FontAwesomeIcon icon={faShoppingCart} /> Koszyk({cartItems.length}) </div></Nav.Link> : (\r\n                            <NavDropdown show={show}  onMouseEnter={showDropdown} onMouseLeave={hideDropdown} className=\"mr-lg-5\" title={<div style={{display: \"inline-block\"}}><FontAwesomeIcon icon={faShoppingCart} /> Koszyk({cartItems.length}) </div>} id=\"collasible-nav-dropdown\">\r\n\r\n                                {\r\n                                    cartItems.length === 0 ? (<h6 className=\"text-danger ml-1 p-2\">Koszyk jest pusty!</h6>) : (\r\n\r\n                                    cartItems.map((item) => (\r\n                                        <>\r\n                                            <NavDropdown.ItemText  role=\"button\" key={item._id}>\r\n                                                <Row>\r\n                                                    <Col lg=\"4\">\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            <img className=\"cartImg img-fluid\" src={item.image} alt={`cartItem${item.product}`}/>\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col lg=\"4\">\r\n                                                        <Link className=\"link-color-carousel\" to={`/product/${item.product}`}>\r\n                                                            <p className=\"mt-4\" style={{marginRight: \"185px\",whiteSpace: \"nowrap\", overflow: \"hidden\",textOverflow: \"ellipsis\",width: \"13ch\"}}>\r\n                                                                {item.name} x {item.qty}\r\n                                                            </p>\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col lg=\"4\">\r\n                                                        <Button role=\"button\" variant=\"outline-danger\" size=\"sm\" onClick={() => dispatch(removeFromCart(item.product))} className=\"mt-4\">X</Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </NavDropdown.ItemText>\r\n                                            <NavDropdown.Divider />\r\n                                        </>\r\n\r\n                                    )))\r\n                                }\r\n                                {\r\n                                    cartItems.length > 0 && (\r\n                                        <>\r\n                                            <NavDropdown.ItemText><h6>Wartość koszyka: {cartItems.reduce((a, c) => a + c.price * c.qty, 0).toFixed(2)} zł</h6></NavDropdown.ItemText>\r\n                                            <NavDropdown.Divider />\r\n                                            <NavDropdown.Item href=\"/cart\">Przejdź do koszyka</NavDropdown.Item>\r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n\r\n                            </NavDropdown>\r\n                        )) :\r\n                            (\r\n                                <></>\r\n                            )\r\n                        )\r\n                    }\r\n                    {\r\n                        userInfo && !userInfo.isAdmin ? (\r\n\r\n                            <>\r\n                                <Nav className=\"mr-lg-1\">\r\n                                    <NavDropdown show={showUser}  onMouseEnter={showDropdownUser} onMouseLeave={hideDropdownUser} className=\"mr-lg-1\" title={<div style={{display: \"inline-block\"}}><FontAwesomeIcon icon={faUser} /> Użytkownik({userInfo.name}) </div>} id=\"collasible-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"/account\">\r\n                                            Konto\r\n                                        </NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/myorders\">\r\n                                            Zamówienia\r\n                                        </NavDropdown.Item >\r\n                                        <NavDropdown.Item onClick={signoutHandler}>\r\n                                            Wyloguj się\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </Nav>\r\n                            </>\r\n\r\n                            ) :\r\n                        (userInfo && userInfo.isAdmin ? (\r\n\r\n                            <>\r\n                                <Nav className=\"mr-lg-1\">\r\n                                    <NavDropdown show={showUser}  onMouseEnter={showDropdownUser} onMouseLeave={hideDropdownUser} className=\"mr-lg-1\" title={<div style={{display: \"inline-block\"}}><FontAwesomeIcon icon={faUser} /> Administrator({userInfo.name}) </div>} id=\"collasible-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"/admin\">\r\n                                            Panel Administratora\r\n                                        </NavDropdown.Item>\r\n                                        <NavDropdown.Item onClick={signoutHandler}>\r\n                                            Wyloguj się\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </Nav>\r\n                            </>\r\n\r\n                        ) : (<Login/>))\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n\r\n        </Navbar>\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\LoginModal.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\CartScreen.js",["217","218","219"],"import React, {useEffect, useState} from 'react';\r\nimport {Container, Row, Col, Button, Table, Form, Image} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function CartPage(props){\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n    const dispatch = useDispatch();\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(`/login?redirect=shipping`);\r\n    }\r\n\r\n    return (\r\n    <div style={{marginBottom: '17%'}}>\r\n        <div className=\"ml-5 pl-4 mt-4\">\r\n            <h1  className='mb-5' style={{textAlign: 'left'}}>\r\n                Koszyk\r\n            </h1>\r\n        </div>\r\n\r\n        <Row className='mb-5 mx-5'>\r\n                <Col md=\"9\">\r\n                    {\r\n                        cartItems.length === 0 ? (<h1 className=\"text-danger ml-1 p-5\"  style={{marginBottom: '9%'}}>Koszyk jest pusty! <a\r\n                            href=\"/product\">Przejdź do zakupów</a></h1>) : (\r\n\r\n                            cartItems.map((item) => (\r\n                                <Row className='p-3 mb-4'>\r\n                                    <Col lg=\"2\">\r\n                                        <Image className=\"img-fluid\" src={item.image}/>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" className=\"mx-3 pt-4\">\r\n                                        <h6>{item.name}</h6>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" className=\"mx-3 pt-2\">\r\n                                        <h6><Form.Label>Ilość</Form.Label></h6>\r\n                                        <Form.Control as=\"select\" value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" className=\"mx-3 pt-3\">\r\n                                        <h5>{(item.price * item.qty).toFixed(2)} zł</h5>\r\n                                        <span>{item.price} zł za sztukę</span>\r\n                                    </Col>\r\n                                    <Col lg=\"2\" className=\"mx-3 pt-3\">\r\n                                        <Button variant=\"outline-danger\" onClick={() => dispatch(removeFromCart(item.product))}>Usuń</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            )))\r\n                    }\r\n\r\n                </Col>\r\n            {\r\n                cartItems.length === 0 ? <></> : (\r\n                    <Col md='3'>\r\n                        <h2 className=\"text-center\">Podsumowanie</h2>\r\n                        <div className=\"bg-light p-3 mr-2\">\r\n                            <Row className=\"mt-4\">\r\n                                <Col lg=\"5\">\r\n                                    <h4 className=\"text-center\">Razem:</h4>\r\n                                </Col>\r\n                                <Col lg=\"7\">\r\n                                    <h3 className=\"text-center\">{cartItems.reduce((a, c) => a + c.price * c.qty, 0).toFixed(2)} zł</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n\r\n                                    <Button variant=\"success\" size=\"lg\" className=\"mt-5 text-lg mb-3\" block  onClick={checkoutHandler}>\r\n                                        Złóż Zamówienie\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Link to=\"/product\"  style={{textDecoration: 'none'}}>\r\n                                        <Button variant=\"outline-dark\" size=\"lg\" className=\"text-lg mb-5\" block>\r\n                                            Kontynuuj Zakupy\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                )\r\n            }\r\n\r\n\r\n        </Row>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Footer.js",["220"],"import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFacebookF, faInstagram, faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function MyFooter() {\r\n    return (\r\n        <footer className=\"bg-dark text-center text-white\">\r\n\r\n            <div className=\"container p-4 pb-0\">\r\n\r\n                <section className=\"mb-4\">\r\n\r\n                    <a className=\"btn btn-outline-light btn-floating m-1\" href=\"https://facebook.com/\" role=\"button\"\r\n                    ><FontAwesomeIcon icon={faFacebookF} /></a>\r\n\r\n                    <a className=\"btn btn-outline-light btn-floating m-1\" href=\"https://twitter.com/\" role=\"button\"\r\n                    ><FontAwesomeIcon icon={faTwitter} /></a>\r\n\r\n                    <a className=\"btn btn-outline-light btn-floating m-1\" href=\"https://www.instagram.com/\" role=\"button\"\r\n                    ><FontAwesomeIcon icon={faInstagram} /></a>\r\n\r\n                </section>\r\n\r\n            </div>\r\n\r\n            <div className=\"text-center p-3\" style={{backgroundColor: \"rgba(0, 0, 0, 0.2)\"}}>\r\n                © 2022 Łukasz Szumilak\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\ProductEditModal.js",["221"],"import {Button, Col, Form, Modal, Tab, Tabs} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {detailsProduct, updateProduct} from \"../actions/productActions\";\r\nimport OrdersTab from \"./Orders\";\r\nimport ProductsTab from \"./Products\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productsConstants\";\r\nimport ErrorBox from \"./Error\";\r\nimport axios from \"axios\";\r\nimport LoadingBox from \"./Loading\";\r\n\r\n\r\n\r\n\r\n\r\nexport function ProductEditModal(props) {\r\n\r\n    const productId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [image1, setImage1] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const {product} = productDetails;\r\n    const [key, setKey] = useState('products');\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const {success: successUpdate} = productUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n            props.history.push('/admin');\r\n        }\r\n        if(!product || (product._id !== productId)){\r\n            dispatch(detailsProduct(productId));\r\n        }else {\r\n            setName(product.name);\r\n            setImage(product.image);\r\n            setImage1(product.image1);\r\n            setPrice(product.price);\r\n            setCategory(product.category);\r\n            setCountInStock(product.countInStock);\r\n            setThumbnail(product.thumbnail);\r\n            setDescription(product.description);\r\n        }\r\n\r\n    }, [product, dispatch, productId, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({_id: productId, name, image, image1, price, category, countInStock, thumbnail, description}));\r\n    }\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const {data} = await axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    }\r\n\r\n    const [loadingUpload1, setLoadingUpload1] = useState(false);\r\n    const [error1, setError1] = useState('');\r\n    const uploadFile1Handler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload1(true);\r\n        try {\r\n            const {data} = await axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            });\r\n            setImage1(data);\r\n            setLoadingUpload1(false);\r\n        } catch (error1) {\r\n            setError1(error1.message);\r\n            setLoadingUpload1(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"mt-3\">\r\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"orders\" title=\"Zamówienia\">\r\n                        <OrdersTab/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"products\" title=\"Produkty\">\r\n                        <ProductsTab/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"users\" title=\"Użytkownicy\">\r\n                        UsersTab\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n\r\n\r\n            <Modal {...props} show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Edytuj Produkt\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Nazwa Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Nazwa Produktu\" value={name} onChange={e => setName(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole nazwa produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Cena Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Cena Produktu\" value={price} onChange={e => setPrice(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole cena produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Zdjęcie nr 1 Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Zdjęcie nr 1 Produktu\" value={image} onChange={e => setImage(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole zdjęcie produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Wybierz Zdjęcie nr 1</Form.Label>\r\n                                <Form.Control type=\"file\" onChange={uploadFileHandler}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole zdjęcie produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                                {error && <ErrorBox variant=\"danger\">{error}</ErrorBox>}\r\n                                {loadingUpload && <LoadingBox/>}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Zdjęcie nr 2 Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Zdjęcie nr 2 Produktu\" value={image1} onChange={e => setImage1(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole zdjęcie produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Wybierz Zdjęcie nr 2</Form.Label>\r\n                                <Form.Control type=\"file\" onChange={uploadFile1Handler}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole zdjęcie produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                                {error1 && <ErrorBox variant=\"danger\">{error1}</ErrorBox>}\r\n                                {loadingUpload1 && <LoadingBox/>}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Kategoria Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Kategoria Produktu\" value={category} onChange={e => setCategory(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole kategoria produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Ilość Produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Ilość Produktu\" value={countInStock} onChange={e => setCountInStock(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole ilość produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Opis Produktu wyświetlany na stronie głównej</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Opis Produktu wyświetlany na stronie głównej\" value={thumbnail} onChange={e => setThumbnail(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole opis produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Opis Produktu w szczegółach produktu</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Opis Produktu w szczegółach produktu\" value={description} onChange={e => setDescription(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole opis produktu jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                        <Button variant=\"success\" type=\"submit\" className=\"mr-3\">Zapisz zmiany</Button>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => props.history.push('/admin')}>Zamknij</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Carousel.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserData.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserChangePassword.js",["222"],"import {Button, Col, Form, InputGroup, Modal} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateUserProfile} from \"../actions/userActions\";\r\n\r\n\r\nexport function UserChangePasswordModal(props) {\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {user} = userDetails;\r\n    const [validated, setValidated] = useState(false);\r\n    const [password, setPassword] =  useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n        }\r\n        setValidated(true);\r\n        if (password !== confirmPassword) {\r\n            alert('Hasła muszą być takie same!');\r\n        } else {\r\n            dispatch(updateUserProfile({userId: user._id, password}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Zmień Hasło\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={submitHandler} noValidate validated={validated}>\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <Form.Control required type=\"password\" placeholder=\"Hasło\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole hasło jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Powtórz Hasło</Form.Label>\r\n                                <Form.Control required type=\"password\" placeholder=\"Powtórz Hasło\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole powtórz hasło jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                        <Button variant=\"success\" type=\"submit\" className=\"mr-3\">Zapisz zmiany</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Zamknij</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default function UserChangePassword(props) {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button style={{float: 'right'}} onClick={() => setModalShow(true)}>\r\n\r\n                Zmień hasło\r\n\r\n            </Button>\r\n\r\n            <UserChangePasswordModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n            />\r\n        </>\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Error.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\UserChangeDetailsModal.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Products.js",["223","224"],"import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteProduct, listProducts, listProductsCategories} from \"../actions/productActions\";\r\nimport {useEffect} from \"react\";\r\nimport LoadingBox from \"./Loading\";\r\nimport ErrorBox from \"./Error\";\r\nimport {Button, Col, Container, Form, Row, Table} from \"react-bootstrap\";\r\nimport {PRODUCT_DELETE_RESET} from \"../constants/productsConstants\";\r\nimport ProductCreate from \"./ProductCreateModal\";\r\n\r\n\r\n\r\nexport default function ProductsTab(props) {\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading, error, products} = productList;\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete;\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate} = productCreate;\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory]= useState('');\r\n    const productCategoryList = useSelector((state) => state.productCategoryList);\r\n    const {categories} = productCategoryList;\r\n\r\n\r\n    const editHandler = (product) => {\r\n        window.location.href = `/product/${product._id}/edit`;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successDelete){\r\n            dispatch({type: PRODUCT_DELETE_RESET});\r\n        }\r\n        dispatch(listProducts());\r\n        dispatch(listProductsCategories());\r\n\r\n        const body = document.querySelector('#root');\r\n\r\n        body.scrollIntoView({\r\n            behavior: 'smooth'\r\n        }, 500);\r\n\r\n    }, [dispatch, successDelete, successCreate]);\r\n\r\n    const deleteHandler = (product) => {\r\n        if(window.confirm(`Jesteś pawny/a, że chcesz usunąć produkt ${product.name}?`)){\r\n            dispatch(deleteProduct(product._id));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{paddingBottom: '14%', marginBottom: '8%'}}>\r\n\r\n\r\n\r\n\r\n            <Row className=\"mr-0\">\r\n                <Col lg=\"2\"><h1 style={{margin: '10px'}}>Produkty</h1></Col>\r\n                <Col lg=\"6\"><ProductCreate /></Col>\r\n            </Row>\r\n            {loadingDelete && <LoadingBox/>}\r\n            {errorDelete && <ErrorBox variant=\"danger\">{errorDelete}</ErrorBox>}\r\n            {loadingCreate && <LoadingBox/>}\r\n            {errorCreate && <ErrorBox variant=\"danger\">{errorCreate}</ErrorBox>}\r\n\r\n            <Form.Row className=\"ml-2\">\r\n                <Form.Group as={Col} lg=\"4\" controlId=\"formGridSearch\">\r\n                    <Form.Label className=\"mt-3\">Wyszukaj</Form.Label>\r\n                    <Form.Control className=\"text-lg\" onChange={e => setName(e.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group as={Col} lg=\"4\" defaultValue=\"Wybierz kategorię...\" controlId=\"formGridCategory\">\r\n                    <Form.Control as=\"select\" className=\"mt-5 text-lg\"  onChange={e => setCategory(e.target.value)}>\r\n                        <option selected value=\"all\">Wybierz kategorię...</option>\r\n                        {categories.map((c) => (\r\n                            <option key={c}>{c}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            {\r\n                loading ? <LoadingBox/>:\r\n                    error ? <ErrorBox variant=\"danger\">{error}</ErrorBox>:\r\n                        <Table className=\"mb-5\" striped bordered responsive>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>NUMER PRODUKTU</th>\r\n                                <th>NAZWA</th>\r\n                                <th>CENA</th>\r\n                                <th>KATEGORIA</th>\r\n                                <th>AKCJE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                products.filter((product) => {\r\n                                    if(name === \"\" && category === \"all\"){\r\n                                        return product;\r\n                                    } else if(product.name.toLowerCase().includes(name.toLowerCase()) && category === \"all\"){\r\n                                        return product;\r\n                                    }else if(product.thumbnail.toLowerCase().includes(name.toLowerCase()) && category === \"all\"){\r\n                                        return product;\r\n                                    } else if(name === \"\" && product.category.toString().toLowerCase().includes(category.toLowerCase())) {\r\n                                        return product;\r\n                                    } else if(product.name.toLowerCase().includes(name.toLowerCase()) && product.category.toString().toLowerCase().includes(category.toLowerCase())){\r\n                                        return product;\r\n                                    } else if(product._id.toLowerCase().includes(name.toLowerCase()) && product.category.toString().toLowerCase().includes(category.toLowerCase())){\r\n                                        return product;\r\n                                    }\r\n                                    else if(product.thumbnail.toLowerCase().includes(name.toLowerCase()) && product.category.toString().toLowerCase().includes(category.toLowerCase())){\r\n                                        return product;\r\n                                    }\r\n\r\n                                }).map((product) => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} zł</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>\r\n                                            <Button size=\"sm\" onClick={() => editHandler(product)}>\r\n                                                Edytuj\r\n                                            </Button>\r\n                                            <Button size=\"sm\" variant=\"danger\" className=\"ml-3\" onClick={() => deleteHandler(product)}>Usuń</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n            }\r\n        </div>\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Orders.js",["225","226"],"import {Button, Col, Container, Form, Table} from \"react-bootstrap\";\r\nimport LoadingBox from \"./Loading\";\r\nimport ErrorBox from \"./Error\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {listOrders, orderDelete} from \"../actions/orderActions\";\r\nimport {ORDER_DELETE_RESET} from \"../constants/orderConstants\";\r\nimport Moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function OrdersTab(props) {\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const {loading, error, orders} = orderList;\r\n    const dispatch = useDispatch();\r\n    const deleteOrder = useSelector(state => state.deleteOrder);\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = deleteOrder;\r\n    const [name, setName] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch({type: ORDER_DELETE_RESET});\r\n        dispatch(listOrders());\r\n    }, [dispatch, successDelete]);\r\n\r\n    const Mailto = ({ email, subject = '', body = '', children }) => {\r\n        let params = subject || body ? '?' : '';\r\n        if (subject) params += `subject=${encodeURIComponent(subject)}`;\r\n        if (body) params += `${subject ? '&' : ''}body=${encodeURIComponent(body)}`;\r\n\r\n        return <Link to={`mailto:${email}${params}`}>{children}</Link>;\r\n    };\r\n\r\n    const deleteHandler = (order) => {\r\n        if(window.confirm(`Jesteś pawny/a, że chcesz usunąć zamówienie numer ${order._id}?`)){\r\n            dispatch(orderDelete(order._id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingBottom: '14%', marginBottom: '8%'}}>\r\n            <h1 style={{margin: '10px'}}>Zamówienia</h1>\r\n            <Form>\r\n                <Form.Row style={{margin: '10px'}}>\r\n                    <Form.Group as={Col} lg=\"4\" controlId=\"formGridSearch\">\r\n                        <Form.Label className=\"mt-3\">Wyszukaj</Form.Label>\r\n                        <Form.Control className=\"text-lg\" onChange={e => setName(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            {loadingDelete && <LoadingBox/>}\r\n            {errorDelete && <ErrorBox variant=\"danger\">{errorDelete}</ErrorBox>}\r\n            {loading ? (<LoadingBox/>) : error ? (<ErrorBox variant=\"danger\">{error}</ErrorBox>) : (\r\n                    <Table className=\"mb-5\" striped bordered responsive>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>NUMER</th>\r\n                            <th>EMAIL</th>\r\n                            <th>DATA</th>\r\n                            <th>KWOTA</th>\r\n                            <th>ZAPŁACONE</th>\r\n                            <th>DOSTARCZONE</th>\r\n                            <th>AKCJE</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {orders.filter((order) => {\r\n                            if(name === \"\"){\r\n                                return order;\r\n                            } else if(order._id.toLowerCase().includes(name.toLowerCase())){\r\n                                return order;\r\n                            }else if(order.shippingAddress.email.toLowerCase().includes(name.toLowerCase())){\r\n                                return order;\r\n                            } else if(order.createdAt.toLowerCase().includes(name.toLowerCase())){\r\n                                return order;\r\n                            }\r\n\r\n                        }).map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td><Mailto email={order.user.email} subject={`Zamówienie nr ${order._id}`} body=\"Dzień Dobry...Pozdrawiamy\">{order.user.email}</Mailto></td>\r\n                                <td>{Moment(order.createdAt).format('YYYY/MM/DD HH:MM')}</td>\r\n                                <td>{order.shippingAddress.totalPrice.toFixed(2)} zł</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (order.shippingAddress.paymentMethod === 'Gotówka przy odbiorze' ? 'Przy odbiorze':'Nieopłacone')}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (order.shippingAddress.deliveryMethod === 'Odbiór Osobisty' ? 'Odbiór Osobisty': 'Niedostarczone')}</td>\r\n                                <td>\r\n                                    <Button size=\"sm\" onClick={() => {window.location.href =`/order/${order._id}`;}}>Szczegóły</Button>\r\n                                    { !order.isPaid ? (\r\n                                        <Button size=\"sm\" variant=\"danger\" className=\"ml-3\" onClick={() => deleteHandler(order)}>Anuluj Zamówienie</Button>\r\n                                    ) : (\r\n                                        <Button size=\"sm\" variant=\"danger\" className=\"ml-3\" onClick={() => deleteHandler(order)}>Zwrot Klienta</Button>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\RegisterScreen.js",["227"],"import {Button, Col, Form, InputGroup, Modal} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register} from \"../actions/userActions\";\r\n\r\nimport LoadingBox from \"../components/Loading\";\r\nimport ErrorBox from \"../components/Error\";\r\n\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n    const [validated, setValidated] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [zip, setZip] = useState('');\r\n    const [acceptedRules, setAcceptedRules] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {loading, error} = userRegister;\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n\r\n        dispatch(register(name, surname, email, password, address, city, state, zip, acceptedRules));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Rejestracja\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n\r\n                    <Form onSubmit={submitHandler} noValidate validated={validated}>\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Imię</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Imię\" onChange={e => setName(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole imię jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Nazwisko</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Nazwisko\" onChange={e => setSurname(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole nazwisko jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <InputGroup hasValidation>\r\n                                    <Form.Control type=\"email\" placeholder=\"Email\" aria-describedby=\"inputGroupPrepend\" required onChange={e => setEmail(e.target.value)}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Proszę wpisać poprawny email.\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <InputGroup hasValidation>\r\n                                    <Form.Control type=\"password\" placeholder=\"Hasło\" aria-describedby=\"inputGroupPrepend\" required onChange={e => setPassword(e.target.value)}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Proszę wpisać poprawne hasło.\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Adres</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Adres\" required  onChange={e => setAddress(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole miasto jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Miasto</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Miasto\" required  onChange={e => setCity(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Pole miasto jest wymagane.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"5\" controlId=\"formGridState\">\r\n                                <Form.Label>Województwo</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={e => setState(e.target.value)}>\r\n                                    <option>Dolnośląskie</option>\r\n                                    <option>Kujawsko-pomorskie</option>\r\n                                    <option>Lubelskie</option>\r\n                                    <option>Lubuskie</option>\r\n                                    <option>Łódzkie</option>\r\n                                    <option>Małopolskie</option>\r\n                                    <option>Mazowieckie</option>\r\n                                    <option>Opolskie</option>\r\n                                    <option>Podkarpackie</option>\r\n                                    <option>Podlaskie</option>\r\n                                    <option>Pomorskie</option>\r\n                                    <option>Śląskie</option>\r\n                                    <option>Świętokrzyskie</option>\r\n                                    <option>Warmińsko-mazurskie</option>\r\n                                    <option>Wielkopolskie</option>\r\n                                    <option>Zachodniopomorksie</option>\r\n                                </Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Proszę wybrać województwo.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                <Form.Label>Numer pocztowy</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"xx-xxx\" required onChange={e => setZip(e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Proszę podać poprawny numer pocztowy.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Group>\r\n                            <Form.Check required label=\"Akceptuję regulamin sklepu\" onChange={e => setAcceptedRules(e.target.checked)}/>\r\n                        </Form.Group>\r\n                        {loading && <LoadingBox/>}\r\n                        {error && <ErrorBox variant=\"danger\">{error}</ErrorBox>}\r\n                        <Button onClick={submitHandler}>\r\n                            Załóż konto\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Zamknij</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Register(props) {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"transparent\" onClick={() => setModalShow(true)}>\r\n\r\n                Zarejestuj się!\r\n\r\n            </Button>\r\n\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\pages\\LoginScreen.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\productsConstants.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\userActions.js",["228","229"],"import axios from \"axios\";\r\nimport {\r\n    USER_ADDRESS_FAIL,\r\n    USER_ADDRESS_REQUEST, USER_ADDRESS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport {PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS} from \"../constants/productsConstants\";\r\n\r\nexport const signin = (email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const register = (name, surname, email, password, address, city, state, zip, acceptedRules) => async (dispatch) =>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, surname, email, password, address, city, state, zip, acceptedRules}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name, surname, email, password, address, city, state, zip, acceptedRules});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const getAddress = (userId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: USER_ADDRESS_REQUEST, payload: userId});\r\n        const {data} = await axios.get(`/api/users/${userId}`);\r\n        dispatch({ type: USER_ADDRESS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: USER_ADDRESS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n\r\n}\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try{\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    const {userSignin: { userInfo}} = getState();\r\n    try {\r\n        const {data} = await axios.put(`/api/users/account`, user, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\productActions.js",["230","231","232","233"],"import {\r\n    CREATE_PRODUCT_FAIL,\r\n    CREATE_PRODUCT_REQUEST, CREATE_PRODUCT_SUCCESS,\r\n    PRODUCT_CATEGORY_LIST_FAIL,\r\n    PRODUCT_CATEGORY_LIST_REQUEST,\r\n    PRODUCT_CATEGORY_LIST_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS\r\n} from \"../constants/productsConstants\";\r\nimport axios from \"axios\";\r\nimport {\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_SUCCESS\r\n} from \"../constants/userConstants\";\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n        const { data } = await axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}\r\n\r\nexport const listProductsCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_CATEGORY_LIST_REQUEST});\r\n        const {data} = await axios.get(\"/api/products/categories\");\r\n        dispatch({type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (productId) => async(dispatch, getState) => {\r\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        await axios.delete(`/api/products/${productId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}\r\n\r\nexport const createProduct = (name, image, image1, price, category, countInStock, thumbnail, description) => async (dispatch, getState) => {\r\n    dispatch({type: CREATE_PRODUCT_REQUEST, payload: {name, image, image1, price, category, countInStock, thumbnail, description}});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try{\r\n        const {data} = await axios.post('/api/products/createproduct', {name, image, image1, price, category, countInStock, thumbnail, description}, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: CREATE_PRODUCT_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: CREATE_PRODUCT_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_UPDATE_REQUEST});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}\r\n\r\n","C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\Tabs.js",[],"C:\\Users\\Arhond\\IdeaProjects\\E-commerce\\frontend\\src\\components\\ProductCreateModal.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":20,"column":9,"nodeType":"240","messageId":"241","endLine":20,"endColumn":29},{"ruleId":"238","severity":1,"message":"242","line":20,"column":31,"nodeType":"240","messageId":"241","endLine":20,"endColumn":54},{"ruleId":"238","severity":1,"message":"243","line":20,"column":56,"nodeType":"240","messageId":"241","endLine":20,"endColumn":79},{"ruleId":"238","severity":1,"message":"244","line":21,"column":21,"nodeType":"240","messageId":"241","endLine":21,"endColumn":34},{"ruleId":"238","severity":1,"message":"245","line":2,"column":16,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":42,"column":8,"nodeType":"248","endLine":42,"endColumn":28,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":44,"column":8,"nodeType":"248","endLine":44,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":77,"column":62,"nodeType":"254","messageId":"255","endLine":77,"endColumn":64},{"ruleId":"238","severity":1,"message":"256","line":2,"column":17,"nodeType":"240","messageId":"241","endLine":2,"endColumn":21},{"ruleId":"238","severity":1,"message":"257","line":7,"column":25,"nodeType":"240","messageId":"241","endLine":7,"endColumn":37},{"ruleId":"238","severity":1,"message":"258","line":19,"column":11,"nodeType":"240","messageId":"241","endLine":19,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":77,"column":44,"nodeType":"261","messageId":"262","endLine":77,"endColumn":46},{"ruleId":"259","severity":1,"message":"260","line":77,"column":65,"nodeType":"261","messageId":"262","endLine":77,"endColumn":67},{"ruleId":"238","severity":1,"message":"263","line":12,"column":12,"nodeType":"240","messageId":"241","endLine":12,"endColumn":19},{"ruleId":"238","severity":1,"message":"264","line":12,"column":30,"nodeType":"240","messageId":"241","endLine":12,"endColumn":35},{"ruleId":"246","severity":1,"message":"265","line":27,"column":8,"nodeType":"248","endLine":27,"endColumn":49,"suggestions":"266"},{"ruleId":"238","severity":1,"message":"267","line":18,"column":12,"nodeType":"240","messageId":"241","endLine":18,"endColumn":21},{"ruleId":"238","severity":1,"message":"268","line":24,"column":22,"nodeType":"240","messageId":"241","endLine":24,"endColumn":32},{"ruleId":"238","severity":1,"message":"269","line":29,"column":22,"nodeType":"240","messageId":"241","endLine":29,"endColumn":36},{"ruleId":"238","severity":1,"message":"270","line":29,"column":45,"nodeType":"240","messageId":"241","endLine":29,"endColumn":57},{"ruleId":"238","severity":1,"message":"271","line":34,"column":21,"nodeType":"240","messageId":"241","endLine":34,"endColumn":25},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":58,"column":35,"nodeType":"261","messageId":"262","endLine":58,"endColumn":37},{"ruleId":"259","severity":1,"message":"260","line":58,"column":56,"nodeType":"261","messageId":"262","endLine":58,"endColumn":58},{"ruleId":"238","severity":1,"message":"272","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":35},{"ruleId":"238","severity":1,"message":"273","line":2,"column":9,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"274","line":2,"column":38,"nodeType":"240","messageId":"241","endLine":2,"endColumn":43},{"ruleId":"238","severity":1,"message":"275","line":3,"column":9,"nodeType":"240","messageId":"241","endLine":3,"endColumn":13},{"ruleId":"246","severity":1,"message":"276","line":54,"column":8,"nodeType":"248","endLine":54,"endColumn":53,"suggestions":"277"},{"ruleId":"238","severity":1,"message":"278","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"273","line":7,"column":22,"nodeType":"240","messageId":"241","endLine":7,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":101,"column":59,"nodeType":"254","messageId":"255","endLine":101,"endColumn":61},{"ruleId":"238","severity":1,"message":"273","line":1,"column":22,"nodeType":"240","messageId":"241","endLine":1,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":67,"column":48,"nodeType":"254","messageId":"255","endLine":67,"endColumn":50},{"ruleId":"238","severity":1,"message":"279","line":2,"column":16,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":12,"column":9,"nodeType":"240","messageId":"241","endLine":12,"endColumn":29},{"ruleId":"238","severity":1,"message":"243","line":12,"column":31,"nodeType":"240","messageId":"241","endLine":12,"endColumn":54},{"ruleId":"238","severity":1,"message":"280","line":19,"column":5,"nodeType":"240","messageId":"241","endLine":19,"endColumn":23},{"ruleId":"238","severity":1,"message":"281","line":20,"column":5,"nodeType":"240","messageId":"241","endLine":20,"endColumn":26},{"ruleId":"238","severity":1,"message":"282","line":21,"column":5,"nodeType":"240","messageId":"241","endLine":21,"endColumn":26},{"ruleId":"238","severity":1,"message":"283","line":22,"column":5,"nodeType":"240","messageId":"241","endLine":22,"endColumn":24},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'PRODUCT_DETAILS_FAIL' is defined but never used.","Identifier","unusedVar","'PRODUCT_DETAILS_REQUEST' is defined but never used.","'PRODUCT_DETAILS_SUCCESS' is defined but never used.","'updateSuccess' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cartItems.length' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["286"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["287"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Card' is defined but never used.","'listProducts' is defined but never used.","'body' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cart.cartItems.length'. Either include it or remove the dependency array.",["288"],"'cartItems' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Table' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["289"],"'InputGroup' is defined but never used.","'useEffect' is defined but never used.","'USER_REGISTER_FAIL' is defined but never used.","'USER_REGISTER_REQUEST' is defined but never used.","'USER_REGISTER_SUCCESS' is defined but never used.","'USER_SIGNIN_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [cartItems.length, dispatch, props.history, userInfo]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch]",{"range":"300","text":"301"},"Update the dependencies array to be: [cart.cartItems.length, dispatch, order, props.history, success]",{"range":"302","text":"303"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history]",{"range":"304","text":"305"},[1793,1813],"[cartItems.length, dispatch, props.history, userInfo]",[1432,1434],"[dispatch]",[882,923],"[cart.cartItems.length, dispatch, order, props.history, success]",[1962,2007],"[product, dispatch, productId, successUpdate, props.history]"]